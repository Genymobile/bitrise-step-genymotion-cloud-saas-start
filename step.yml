#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Genymotion Cloud Start Android Devices
summary: |
  Start Genymotion Cloud SaaS Android Devices
description: |-
  This step launches Android devices on Genymotion Cloud SaaS.
  Appium, Espresso, and others test automation frameworks can be run on those devices.
  Setup instructions:
  1. Create a Genymotion Cloud SaaS account: [https://cloud.geny.io](https://cloud.geny.io/?&utm_source=web-referral&utm_medium=docs&utm_campaign=bitrise&utm_content=signup)
  1. Navigate to Default templates or templates:
    - Select a device.
    - Click on dot menu and select details.
    - On the description field, get the recipe UUID.
    - Copy paste it to use it in this step.
website: https://github.com/genymobile/bitrise-step-genymotion-cloud-saas-start
source_code_url: https://github.com/genymobile/bitrise-step-genymotion-cloud-saas-start
support_url: https://github.com/genymobile/bitrise-step-genymotion-cloud-saas-start/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
project_type_tags:
#   - ios
#   - macos
  - android
  - xamarin
  - react-native
  - cordova
  - ionic
  - flutter

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""

deps:
  brew:
  - name: python3
  - bin_name: pip3
  apt_get:
  - name: python3-pip
  - bin_name: pip3


toolkit:
  go:
    package_name: github.com/genymobile/bitrise-step-genymotion-cloud-saas-start


inputs:
  - email: ""
    opts:
      title: Genymotion Cloud SaaS email
      summary: ""
      description: |-
        Email of your Genymotion Cloud SaaS account, if you don't have an account please create it first on [https://cloud.geny.io](https://cloud.geny.io/?&utm_source=web-referral&utm_medium=docs&utm_campaign=bitrise&utm_content=signup)
      is_required: true

  - password: ""
    opts:
      title: Genymotion Cloud SaaS password
      summary: ""
      description: |-
        Password of your Genymotion Cloud SaaS account.
      is_required: true
      is_sensitive: true

  - recipe_uuid: ""
    opts:
      title: Recipe UUID
      summary: ""
      description: |-
        Recipe UUID is the identifier used when starting an instance, Recipe UUID can be retrieved using `gmsaas recipes list`.

        Format:
        You can specify several recipe UUIDs in order to start several instances. Recipe UUIDs are separated with a comma.
        
        For example:
        `e20da1a3-313c-434a-9d43-7268b12fee08,c52fdfc2-6914-4266-aa6e-50258f50ef91,06867de4-4b99-4842-ba40-fd3daaabdf23`

        or specify only one recipe UUID:
        `e20da1a3-313c-434a-9d43-7268b12fee08`  
      is_required: true

  - adb_serial_port: ""
    opts:
      title: ADB serial port
      summary: ""
      description: |-
          If `adb_serial_port` option is set,  
          the instance will be connected to ADB on localhost:`adb_serial_port`.  
          Otherwise it will be connected to a port given by your system,  
          `gmsaas instances list` to know which one.

          Format:
          You can specify several ADB Serial ports. ADB Serial ports are separated with a comma.

          For example:
          `4321,4322,4323`

outputs:
  - GMCLOUD_SAAS_INSTANCE_UUID:
    opts:
      title: UUID list of started and connected instances
      description: |
        Return the UUID list of started and connected instances.
  - GMCLOUD_SAAS_INSTANCE_ADB_SERIAL_PORT:
    opts:
      title: ADB Serial Port list of connected instances
      description: |
        Return an ADB Serial Port list of connected instances.
