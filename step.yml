#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  genymotion-cloud-saas-start
summary: |
  Start Genymotion Cloud SaaS Android devices
description: |
  Start Genymotion Cloud SaaS Android devices
website: https://github.com/genymobile/bitrise-step-genymotion-cloud-saas-start
source_code_url: https://github.com/genymobile/bitrise-step-genymotion-cloud-saas-start
support_url: https://github.com/genymobile/bitrise-step-genymotion-cloud-saas-start/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""

deps:
  brew:
  - name: git
  - name: wget
  apt_get:
  - name: git
  - name: wget


toolkit:
  go:
    package_name: github.com/genymobile/bitrise-step-genymotion-cloud-saas-start


inputs:
  - genymotion_cloud_saas_login: ""
    opts:
      title: genymotion_cloud_saas_login
      summary: ""
      description: |-
        Email of your Genymotion Cloud SaaS account
      is_required: true

  - genymotion_cloud_saas_password: ""
    opts:
      title: genymotion_cloud_saas_password
      summary: ""
      description: |-
        Password of your Genymotion Cloud SaaS account
      is_required: true

  - genymotion_cloud_saas_recipe_uuid: ""
    opts:
      title: genymotion_cloud_saas_recipe_uuid
      summary: ""
      description: |-
        Recipe UUID is the identifier used when starting an instance, Recipe UUID can be retrieved using `gmsaas recipes list`
      is_required: true

  - genymotion_cloud_saas_instance_name: ""
    opts:
      title: genymotion_cloud_saas_instance_name
      summary: ""
      description: |-
        Name given to the newly created instance
      is_required: true

  - genymotion_cloud_saas_adb_serial_port: ""
    opts:
      title: genymotion_cloud_saas_adb_serial_port
      summary: ""
      description: |-
          If `genymotion_cloud_saas_adb_serial_port` option is set,
          the instance will be connected to ADB on localhost:`genymotion_cloud_saas_adb_serial_port`.
          Otherwise it will be connected to a port given by your system,
          `gmsaas instances list` to know which one.

outputs:
  - GENYMOTION_CLOUD_SAAS_INSTANCE_UUID:
    opts:
      title: UUID of the instance connected
      description: |
        Return the UUID of the instance started and connected
  - GENYMOTION_CLOUD_SAAS_INSTANCE_ADB_SERIAL_PORT:
    opts:
      title: ADB Serial Port of the instance connected
      description: |
        Return the ADB Serial Port of the instance started and connected
